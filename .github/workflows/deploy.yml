name: Deploy to GitHub Pages

on:
  push:
    branches: [main, master]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for proper version info

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Create build directory
        run: mkdir -p build

      - name: Create .nojekyll file
        run: touch build/.nojekyll

      - name: Copy client directory contents
        run: |
          cp -r client/* build/

      - name: Setup client config for production
        run: |
          # If config.js exists, set it for production
          if [ -f "build/js/config.js" ]; then
            sed -i 's/USE_PRODUCTION: false/USE_PRODUCTION: true/g' build/js/config.js
            echo "Updated config.js to use production settings"
          else
            echo "Warning: config.js not found in build/js/"
          fi

      - name: Add backend configuration note
        run: |
          echo "<!-- Note: When deployed to GitHub Pages, the backend must be hosted separately. Configure your backend URL in js/config.js -->" >> build/index.html

      - name: List deployed files (for debugging)
        run: |
          echo "Contents of build directory:"
          ls -la build/
          echo "Contents of build/js directory:"
          ls -la build/js/ || echo "js directory not found"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Deployment Info
        run: |
          echo "Deployment complete!"
          echo "If you're getting a 404 error, please check:"
          echo "1. GitHub Pages is enabled in your repository settings"
          echo "2. Wait a few minutes for GitHub to build and deploy your site"
          echo "3. Make sure your index.html is at the root of the deployed site"
